version: '3'
services:

  api_service:
    container_name : api_news
    build: 
      context: ./api_call
    env_file:
      - .env
    networks:
      - mynetwork

  zookeeper_service:
    image: confluentinc/cp-zookeeper:latest
    container_name : zookeeper_service
    platform: linux/amd64
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
    ports:
      - "2181:2181"
    networks:
      - mynetwork
      
  kafka_service:
    container_name : kafka_service
    build:
      context: ./kafka_server
    ports:
      - "9092:9092"
    expose:
      - '29092'
    environment:
      KAFKA_BROKER_ID: 0
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper_service:2181'
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka_service:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
  
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./kafka_server/kafka_init.sh:/kafka_init.sh
    command: ["/bin/sh", "-c", "/kafka_init.sh && start-kafka"]
    depends_on:
      - zookeeper_service
    networks:
      - mynetwork

networks:
  mynetwork: {}
